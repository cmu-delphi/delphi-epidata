name: Create Release

on:
  workflow_dispatch:
    inputs:
      versionName:
        description: 'Semantic Version Number (i.e., 5.5.0 or patch, minor, major)'
        required: true
        default: patch

jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          ref: main
          ssh-key: ${{ secrets.CMU_DELPHI_DEPLOY_MACHINE_SSH }}
      - name: Reset dev branch
        run: |
          git fetch origin dev:dev
          git reset --hard origin/dev
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Change version number
        id: version
        # See this issue for explanation and testing:
        # https://github.com/cmu-delphi/delphi-epidata/pull/1473
        run: |
          python -m pip install bump-my-version
          echo -n "next_tag=" >> $GITHUB_OUTPUT
          allowed_pattern="^(major|minor|patch|[0-9]+\.[0-9]+\.[0-9]+)$"

          if [[ ! ${{ github.event.inputs.versionName }} =~ $allowed_pattern ]]; then
            echo "\nInvalid version name: ${{ github.event.inputs.versionName }}"
            exit 1
          fi

          if [[ ${{ github.event.inputs.versionName }} =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "${{ github.event.inputs.versionName }}"
          else
            echo $(bump-my-version show-bump | grep ${{ github.event.inputs.versionName }} | sed -r s,"^.*â”€ ",,)
          fi
      - name: Get main branch SHA
        id: base-sha
        run: echo "sha=$(git rev-parse origin/main)" >> $GITHUB_OUTPUT
      - name: Get Python client file changes
        id: changed-py
        uses: tj-actions/changed-files@v44
        with:
            base_sha: "${{ steps.base-sha.outputs.sha }}"
            files: |
              src/client/delphi_epidata.py
              src/client/packaging/pypi/**
      - name: Bump Python versions if client files changed
        if: steps.changed-py.outputs.any_changed == 'true'
        run: |
          cd src/client/packaging/pypi
          bump-my-version --allow-dirty --new-version ${{ steps.version.outputs.next_tag }}
      - name: Create pull request into prod
        uses: peter-evans/create-pull-request@v3
        with:
          branch: release/delphi-epidata-${{ steps.version.outputs.next_tag }}
          commit-message: 'chore: release delphi-epidata ${{ steps.version.outputs.next_tag }}'
          base: main
          title: Release Delphi Epidata ${{ steps.version.outputs.next_tag }}
          labels: chore
          reviewers: melange396
          assignees: melange396
          body: |
            Releasing Delphi Epidata ${{ steps.version.outputs.next_tag }}.
